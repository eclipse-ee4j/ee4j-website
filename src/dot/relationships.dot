/********************************************************************************
 * Copyright (c) 2018 Contributors to the Eclipse Foundation
 * 
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Distribution License v. 1.0 which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 * 
 * SPDX-License-Identifier: BSD-3-Clause
 ********************************************************************************/

// This file defines a graph of the relationship between the
// EE4J Projects and the various specifications that make up
// Jakarta EE.
//
// Render using Graphviz.
// e.g. 
// > dot ee4j_dependencies.dot -Tsvg > dependencies.svg
//

digraph G {
	rankdir=LR;
	rank=same;

	// "Implementer" nodes.
	// Projects that provide implementations of the
	// specifications go here. All nodes that represent
	// projects are prefixed with "project_"
	node[ shape=box, style="rounded,bold" ]
	project_eclipselink[ label="EclipseLink" ];
	project_el[ label="Eclipse Project\nfor Expression Language" ];
	project_glassfish[ label="Eclipse\nGlassFish" ];
	project_grizzly[ label="Eclipse Grizzly" ];
	project_jaf[ label="Eclipse Project\nfor JAF" ];
	project_javamail[ label="Eclipse Project\nfor JavaMail" ];
	project_jaxb[ label="Eclipse Project\nfor JAXB" ];
	project_jersey[ label="Eclipse Jersey" ];
	project_jms[ label="Eclipse Project\nfor JMS" ];
	project_jsonp[ label="Eclipse Project\nfor JSON Processing" ];
	project_jstl[ label="Eclipse Project\nfor JSTL" ];
	project_metro[ label="Eclipse Metro" ];
	project_mojarra[ label="Eclipse Mojarra" ];
	project_soteria[ label="Eclipse Soteria" ];
	project_stable[ label="Eclipse Project for\nStable Jakarta EE APIs" ];
	project_tyrus[ label="Eclipse Tyrus" ];
	project_yasson[ label="Eclipse Yasson" ];

	// External "Implementer" nodes
	// These are open source projects that implement specifications
	// but are not hosted by the Eclipse Foundation
	node[ shape=box, style="rounded,filled"]
	project_hv[ label="Hibernate Validator" ];
	project_jbatch[ label="JBatch" ];
	project_weld[ label="Weld" ];

	// "Maintainer" nodes
	// A project is a maintainer when it is responsible
	// for maintaining a specification and API.
	node[ shape=box, style="rounded" ]
	project_platform[ label="Eclipse Project for\nJakarta EE Platform" ];

	project_ca[ label="Eclipse Project for\nCommon Annotations" ];
	project_ejb[ label="Eclipse Project\nfor EJB" ];
	project_es[ label="Eclipse Project for\nEnterprise Security" ];
	project_interceptors[ label="Eclipse Project\nfor Interceptors" ];
	project_jacc[label="Eclipse Project\nfor JACC"];
	project_jaspic[label="Eclipse Project\nfor JASPIC"]; 
	project_jca[ label="Eclipse Project\nfor JCA" ];
	project_jaxrs[ label="Eclipse Project\nfor JAX-RS" ];
	project_jaxws[ label="Eclipse Project\nfor JAX-WS" ];
	project_jsp[ label="Eclipse Project\nfor JSP" ];
	project_jta[ label="Eclipse Project\nfor JTA" ];
	project_servlet[ label="Eclipse Project\nfor Servlet" ];
	project_websocket[ label="Eclipse Project\nfor WebSocket" ];

	// "Specification" nodes
	// Every specification gets a node. Specifications are
	// not projects. There is, at least in many cases, a
	// one-to-one relationship between projects and specifications
	// (e.g. "Eclipse Project for JPA" maintains the JPA specification),
	// But there are other relationships.
	node[ shape=box, style=dotted ];
	ca[ label="Common\nAnnotations" ];
	ejb[ label="EJB" ];
	el[ label="Expression\nLanguage" ];
	es[ label="Enterprise\nSecurity" ];
	interceptors[ label="Interceptors" ];
	jacc[label="JACC"];
	jaf[ label="JAF" ];
	javamail[ label="JavaMail" ];
	jaspic[label="JASPIC"]; 
	jaxws[ label="JAX-WS" ];
	jws[ label="JWS" ];
	jaxb[ label="JAXB" ];
	jaxrs[ label="JAX-RS" ];
	// jakartaee[ label="Jakarta EE Platform" ];
	jca[ label="JCA" ];
	jms[ label="JMS" ];
	jpa[ label="JPA" ];
	jsonb[ label="JSON-B" ];
	jsonp[ label="JSON-P" ];
	jsf[ label="JSF" ];
	jsp[ label="JSP" ];
	jstl[ label="JSTL" ];
	jta[ label="JTA" ];
	deployment[ label="Enterprise\nDeployment" ];
	management[ label="Enterprise\nManagement" ];
	jaxr[ label="JAXR" ];
	servlet[ label="Servlets" ];
	websocket[ label="WebSocket" ];
	jaxrpc[ label="JAX-RPC" ];
	saaj[ label="SAAJ" ];
	cdi[ label="CDI" ];
	di[ label="Dependency Injection" ];
	bv[ label="Bean Validation" ];
	batch[ label="Batch" ];

	edge[ fontsize=10 ];

	// References between specifications.
	// e.g. EJB requires Interceptors, JTA, ...
	edge[ label="requires", style="dashed" ];
	/*
	 * Commented out because it makes the picture much more clear.
	 *
	jakartaee -> ca;
	jakartaee -> ejb;
	jakartaee -> el;
	jakartaee -> es;
	jakartaee -> jacc;
	jakartaee -> jaf;
	jakartaee -> javamail;
	jakartaee -> jaspic;
	jakartaee -> jaxb;
	jakartaee -> jaxrs;
	jakartaee -> jaxws;
	jakartaee -> jws;
	jakartaee -> jca;
	jakartaee -> jms;
	jakartaee -> jpa;
	jakartaee -> jsonb;
	jakartaee -> jsonp;
	jakartaee -> jsf;
	jakartaee -> jsp;
	jakartaee -> jstl;
	jakartaee -> jta;
	jakartaee -> management;
	jakartaee -> servlet;
	jakartaee -> websocket;
	jakartaee -> jaxrpc;
	jakartaee -> cdi;
	jakartaee -> bv;
	jakartaee -> batch;
	*/

	ejb -> interceptors;
	ejb -> jta;
	ejb -> jms;
	jsf -> jsp;
	jstl -> jsp;
	jsp -> servlet;
	jsp -> el;
	javamail -> jaf;
	jaxws -> jaf;
	es -> jaspic;
	cdi -> di;

	// Relationships between reference implementations
	// and the specification that they implement.
	edge[ label="implements", style="solid" ];
	project_glassfish -> ca;
	project_glassfish -> servlet;
	project_glassfish -> jsp;
	project_glassfish -> jca;
	// project_glassfish -> jakartaee;
	project_glassfish -> ejb;
	project_glassfish -> deployment;
	project_glassfish -> management;
	project_glassfish -> interceptors;
	project_glassfish -> jta;
	project_glassfish -> jaspic;
	project_glassfish -> jacc;
	project_mojarra -> jsf;
	project_metro -> jaxws;
	project_metro -> jws;
	project_metro -> saaj;
	project_soteria -> es;
	project_tyrus -> websocket;
	project_weld -> cdi;
	project_weld -> di;
	project_weld -> interceptors;
	project_hv -> bv;
	project_jbatch -> batch;

	// Relationships between projects and the specs
	// that they maintain
	edge[ label="maintains" ]
	// project_platform -> jakartaee;
	project_ca -> ca;
	project_eclipselink -> jpa;
	project_ejb -> ejb;
	project_el -> el;
	project_es -> es;
	project_interceptors -> interceptors;
	project_jacc -> jacc;
	project_jaf -> jaf;
	project_javamail -> javamail;
	project_jaspic -> jaspic;
	project_jaxb -> jaxb;
	project_jaxrs -> jaxrs;
	project_jaxws -> jaxws;
	project_jaxws -> jws;
	project_jaxws -> saaj;
	project_jca -> jca;
	project_jersey -> jaxrs;
	project_jms -> jms;
	project_jsonp -> jsonp;
	project_jsp -> jsp;
	project_jstl -> jstl;
	project_jta -> jta;
	project_servlet -> servlet;
	project_stable -> deployment;
	project_stable -> management;
	project_stable -> jaxr;
	project_stable -> jaxrpc;
	project_websocket -> websocket;
	project_yasson -> jsonb;

	// Straight up consumption. One RI project consumes
	// the RI from another project.
	edge[ label="consumes" ];
	project_glassfish -> project_eclipselink;
	project_glassfish -> project_el;
	project_glassfish -> project_grizzly;
	project_glassfish -> project_hv;
	project_glassfish -> project_jaf;
	project_glassfish -> project_javamail;
	project_glassfish -> project_jaxb;
	project_glassfish -> project_jbatch;
	project_glassfish -> project_jersey;
	project_glassfish -> project_jms;
	project_glassfish -> project_jsonp;
	project_glassfish -> project_jstl;
	project_glassfish -> project_metro;
	project_glassfish -> project_mojarra;
	project_glassfish -> project_soteria;
	project_glassfish -> project_stable;
	project_glassfish -> project_tyrus;
	project_glassfish -> project_weld;
	project_glassfish -> project_yasson;
}
